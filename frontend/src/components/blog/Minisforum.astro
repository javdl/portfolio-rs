---
import Post from "$lib/components/common/Post.astro";
import { getPost } from "$lib/common/getPost";
import { Icon } from "astro-icon/components";
import { languageTag } from "@paraglide/runtime";
import { Image } from "astro:assets";
import MsImg from "$lib/assets/images/mf.avif";
import LinkPost from "$lib/components/common/LinkPost.astro";
import { BerliLink, RaauLink, Ms01Link } from "$lib/common/consts";

const downloadsTableData = [
    {
        name: "Bios",
        description: "Official BIOS",
        link: "https://www.minisforum.com/new/support?lang=en#/support/page/download/108",
        linkText: "Web",
    },
    {
        name: "UEFI Shell",
        description: "ISO of UEFI Shell",
        link: "https://github.com/pbatard/UEFI-Shell/releases",
        linkText: "GitHub",
    },
    {
        name: "Rufus",
        description: "Bootable USB tool",
        link: "https://rufus.ie/en/",
        linkText: "Web",
    },
];

const bootTableData = [
    {
        bootSelection: "UEFI-Shell latest ISO",
        partitionScheme: "GPT",
        filesystem: "FAT32",
    },
];

const post = await getPost("aa614ca5-0940-41a1-bf80-710096df26ac");
if (!post) throw new Error("Post not found");
---

<Post
    title={post.title[languageTag()]}
    url={post.url}
    description={post.description[languageTag()]}
    readTime={post.readTime}
    author={post.author}
    tags={post.tags}
    date={post.date}
>
    <h1 id="freedom" class="blog-content-title">
        <a href="#freedom">Freedom</a>
    </h1>
    <Image src={MsImg} alt="MS-01" class="w-full rounded-lg grayscale" />
    <p class="blog-content-text">
        Fed up with the costs and limitations of renting a virtual server, I
        decided to set up my own dedicated server. To my pleasant surprise, it
        wasnt as complicated as I expected! thats how I got my first dedicated
        machine, which now hosts <LinkPost
            title={RaauLink.title}
            url={RaauLink.url}
        />, <LinkPost title={BerliLink.title} url={BerliLink.url} />, and this
        website.
    </p>

    <h2 id="prerequisites" class="blog-content-title">
        <a href="#prerequisites">Prerequisites</a>
    </h2>
    <p class="blog-content-text flex gap-2">
        A pendrive and internet
        <Icon
            width="1em"
            height="1em"
            class="duration-200 group-hover:translate-x-[1.5px]"
            name="heart"
        />
    </p>

    <h2 id="downloads" class="blog-content-title">
        <a href="#downloads">Downloads</a>
    </h2>
    <p class="blog-content-text">A list of files that you need download</p>
    <div
        class="blog-content-text overflow-x-auto rounded-lg border border-border"
    >
        <table
            class="min-w-full divide-y-2 divide-border bg-background text-sm"
        >
            <thead class="text-left">
                <tr>
                    <th
                        class="whitespace-nowrap md:px-4 px-2 py-2 font-medium text-secondary-foreground"
                        >#</th
                    >
                    <th
                        class="whitespace-nowrap md:px-4 px-2 py-2 font-medium text-secondary-foreground"
                        >Description</th
                    >
                    <th
                        class="whitespace-nowrap md:px-4 px-2 py-2 font-medium text-secondary-foreground"
                        >Link</th
                    >
                </tr>
            </thead>

            <tbody class="divide-y divide-border">
                {
                    downloadsTableData.map((item) => (
                        <tr>
                            <td class="whitespace-nowrap md:px-4 px-2 py-2 text-secondary-foreground">
                                {item.name}
                            </td>
                            <td class="whitespace-nowrap md:px-4 px-2 py-2 text-secondary-foreground">
                                {item.description}
                            </td>
                            <td class="whitespace-nowrap md:px-4 px-2 py-2 text-secondary-foreground">
                                <LinkPost
                                    title={item.linkText}
                                    url={item.link}
                                />
                            </td>
                        </tr>
                    ))
                }
            </tbody>
        </table>
    </div>

    <h2 id="boot" class="blog-content-title">
        <a href="#boot">Booteable</a>
    </h2>
    <p class="blog-content-text">
        Now you need to use the UEFI Shell ISO and boot it to the pendrive. You
        need create the booteable pendrive in this scheme:
    </p>
    <div class="overflow-x-auto rounded-lg border border-border">
        <table
            class="min-w-full divide-y-2 divide-border bg-background text-sm"
        >
            <thead class="text-left">
                <tr>
                    <th
                        class="whitespace-nowrap md:px-4 px-2 py-2 font-medium text-secondary-foreground"
                    >
                        Boot selection
                    </th>
                    <th
                        class="whitespace-nowrap md:px-4 px-2 py-2 font-medium text-secondary-foreground"
                    >
                        Partition scheme
                    </th>
                    <th
                        class="whitespace-nowrap md:px-4 px-2 py-2 font-medium text-secondary-foreground"
                    >
                        Filesystem
                    </th>
                </tr>
            </thead>

            <tbody class="divide-y divide-border">
                {
                    bootTableData.map((item) => (
                        <tr>
                            <td class="whitespace-nowrap md:px-4 px-2 py-2 text-secondary-foreground">
                                {item.bootSelection}
                            </td>
                            <td class="whitespace-nowrap md:px-4 px-2 py-2 text-secondary-foreground">
                                {item.partitionScheme}
                            </td>
                            <td class="whitespace-nowrap md:px-4 px-2 py-2 text-secondary-foreground">
                                {item.filesystem}
                            </td>
                        </tr>
                    ))
                }
            </tbody>
        </table>
    </div>
    <p class="blog-content-text">
        Then extract the bios in the .zip and copy it to the pendrive that you
        boot with the UEFI Shell.
    </p>

    <h2 id="update" class="blog-content-title">
        <a href="#update">Update</a>
    </h2>

    <p class="blog-content-text">
        Insert the pendrive in the <LinkPost
            title={Ms01Link.title}
            url={Ms01Link.url}
        /> and reboot, hit <code>DEL</code> to enter the BIOS menu, select UEFI Shell
        or boot from the pendrive.. type and enter
        <code>FS0:</code> and select <code>AfuEfiFlash.nsh</code>
    </p>
    <p class="blog-content-text flex gap-2">
        The update will start automatically..
        <Icon
            width="1em"
            height="1em"
            class="duration-200 group-hover:translate-x-[1.5px]"
            name="rocket"
        />
    </p>

    <h2 id="computers" class="blog-content-title">
        <a href="#computers">Computers never sleep</a>
    </h2>
    <p class="blog-content-text">
        You can find all detailed technical specifications and pricing
        information in MS-01. Thats all, if you have any questions you can write
        to me.
    </p>
</Post>
